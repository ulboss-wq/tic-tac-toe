let counter = 0; // –°—á—ë—Ç—á–∏–∫ —Ö–æ–¥–æ–≤
let currentPlayer = 'X'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞—á–∏–Ω–∞–µ—Ç X
let scoreX = 0; // –°—á—ë—Ç –∏–≥—Ä–æ–∫–∞ X
let scoreO = 0; // –°—á—ë—Ç –∏–≥—Ä–æ–∫–∞ O

const cells = document.querySelectorAll('#field td');
const header = document.getElementById('header');
const scoreboard = document.getElementById('scoreboard'); // –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á–µ—Ç–∞

function isVictory() {
    const combos = [
        [0, 1, 2],
        [3, 4, 5],
        [6, 7, 8],
        [0, 3, 6],
        [1, 4, 7],
        [2, 5, 8],
        [0, 4, 8],
        [2, 4, 6]
    ];

    for (const combo of combos) {
        if (
            cells[combo[0]].innerHTML === cells[combo[1]].innerHTML &&
            cells[combo[1]].innerHTML === cells[combo[2]].innerHTML &&
            cells[combo[0]].innerHTML !== ''
        ) {
            return combo; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—ã–∏–≥—Ä—ã—à–Ω—É—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é
        }
    }
    return null; // –ï—Å–ª–∏ –ø–æ–±–µ–¥—ã –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
}

function highlightWinningCombo(combo) {
    for (const index of combo) {
        cells[index].style.backgroundColor = '#014421'; // –ó–µ–ª–µ–Ω—ã–π —Ñ–æ–Ω
    }
}

function tap(event) {
    event.target.innerHTML = `<img src="${currentPlayer === 'X' ? 'close (1).png' : 'o.png'}" width=100>`;

    const winningCombo = isVictory(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–±–µ–¥—É

    if (winningCombo) {
        for (const cell of cells) {
            cell.removeEventListener('click', tap); // –û—Ç–∫–ª—é—á–∞–µ–º –∫–ª–∏–∫–∏
        }

        highlightWinningCombo(winningCombo); // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –ø–æ–±–µ–¥–Ω—É—é –ª–∏–Ω–∏—é

        if (currentPlayer === 'X') {
            scoreX++;
            alert('üéâ Player X wins!'); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            header.innerText = 'X is winner';
        } else {
            scoreO++;
            alert('üéâ Player O wins!'); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            header.innerText = 'O is winner';
        }

        updateScoreboard(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç
    } else if (counter === 8) {
        alert('ü§ù It\'s a draw!'); // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∏—á—å–µ–π
        header.innerText = 'Draw!';
    }

    counter++;
    currentPlayer = currentPlayer === 'X' ? 'O' : 'X'; // –ú–µ–Ω—è–µ–º –∏–≥—Ä–æ–∫–∞
    event.target.removeEventListener('click', tap); // –ó–∞–ø—Ä–µ—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∫–ª–∏–∫
}

function startGame() {
    header.innerText = 'Tic Tac Toe';
    counter = 0;

    for (const cell of cells) {
        cell.innerHTML = '';
        cell.style.backgroundColor = ''; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ–Ω
        cell.addEventListener('click', tap);
    }
}

function updateScoreboard() {
    scoreboard.innerText = `Score - X: ${scoreX} | O: ${scoreO}`;
}

function choosePlayer(player) {
    currentPlayer = player;
    startGame();
}

startGame();
